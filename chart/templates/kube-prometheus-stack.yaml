{{- if and (.Values.kubePrometheusStack) (.Values.kubePrometheusStack.enable) -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "9"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: {{ .Values.repoUrl }}
    path: add-ons/kube-prometheus-stack
    targetRevision: {{ .Values.targetRevision }}
    helm:
      values: |
        kube-prometheus-stack:
        {{- toYaml .Values.kubePrometheusStack | nindent 10 }}
      parameters:
        - name: kube-prometheus-stack.grafana."grafana.ini"."auth.generic_oauth".client_secret
          value: {{ .Values.kubePrometheusStack.grafanaClientSecret }}
        - name: "kube-prometheus-stack.grafana.grafana\.ini.auth\.generic_oauth.auth_url" 
          value: https://{{ .Values.keycloakPrefixName }}.{{ .Values.baseDomain }}/auth/realms/Quentral/protocol/openid-connect/auth
        - name: "kube-prometheus-stack.grafana\\.grafana.ini\\.auth.generic_oauth".token_url"
          value: https://{{ .Values.keycloakPrefixName }}.{{ .Values.baseDomain }}/auth/realms/Quentral/protocol/openid-connect/token
        - name: kube-prometheus-stack.grafana."grafana.ini"."auth.generic_oauth".api_url
          value: https://{{ .Values.keycloakPrefixName }}.{{ .Values.baseDomain }}/auth/realms/Quentral/protocol/openid-connect/userinfo
        - name: kube-prometheus-stack.grafana."grafana.ini".server.root_url
          value: {{ .Values.kubePrometheusStack.serverRootUrl }}
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - ServerSideApply=true
    - CreateNamespace=true
    retry:
      limit: 1
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 5m
  ignoreDifferences:
    - group: monitoring.coreos.com
      kind: CustomResourceDefinition
      jsonPointers:
        - /metadata/annotations
        - /spec/versions
    - group: '*'
      kind: MutatingWebhookConfiguration
      jqPathExpressions:
        - '.webhooks[]?.failurePolicy'
    - group: '*'
      kind: ValidatingWebhookConfiguration
      jqPathExpressions:
        - '.webhooks[]?.failurePolicy'
{{- end -}}
